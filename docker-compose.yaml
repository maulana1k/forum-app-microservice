services:
  # PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: forumdb
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forum"]
      interval: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: forum-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: forum-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5

  # Go/Fiber app
  app-server:
    build:
      context: ./app-server
      dockerfile: Dockerfile
    container_name: app-server
    env_file:
      - ./app-server/.env
    ports:
      - "8080:8080"
    environment:
      DOCKER_ENV: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Python/FastAPI app
  fastapi-server:
    build:
      context: ./fastapi-server
      dockerfile: Dockerfile
    container_name: fastapi-server
    env_file:
      - ./fastapi-server/.env
    ports:
      - "8000:8000"
    environment:
      DOCKER_ENV: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Optional: Web frontend
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: forum-web
    ports:
      - "3000:3000"

volumes:
  pgdata:
  redisdata:
